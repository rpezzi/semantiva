# docs/source/examples/fanout_floats.yaml
# Fan-out (local): FloatValueDataSource -> FloatAddOperation -> FloatMultiplyOperation -> FloatValueProbe -> FloatTxtFileSaver
# For each (value, added, factor) tuple, run the pipeline serially (default local orchestrator).

extensions: ["semantiva-examples"]

pipeline:
  nodes:
    # 1) Source: expects 'value' (supplied by fan-out via context)
    - processor: FloatValueDataSource

    # 2) Add: use a constant addend to keep the example clear
    - processor: FloatAddOperation
      parameters:

    # 3) Multiply: expects 'factor' (supplied by fan-out via context)
    - processor: FloatMultiplyOperation

    # 4) Collect float value into the context
    - processor: FloatCollectValueProbe
      context_keyword: "result"

    # 5) Build a filename string using fan-out parameters
    - processor: stringbuild:"{value}_plus_{addend}_times_{factor}_equals_{result}.txt":path

    # 6) Write the result to a text file
    - processor: FloatTxtFileSaver

trace:
  driver: jsonl
  options: 
    detail: all
  output_path: ./ser/

fanout:
  # Multi-parameter ZIP fan-out (equal lengths enforced)
  multi:
    value:  [1.0,  2.0,  3.5]
    addend: [1.0,  1.0,  1.0] 
    factor: [10.0, 20.0, 30.0]
